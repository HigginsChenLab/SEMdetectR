% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SEM_main_function.R
\name{detectSEM}
\alias{detectSEM}
\title{Detect SEMs in DNA Methylation Beta Values}
\usage{
detectSEM(betas, num_cores = 1, rf = FALSE, probes = NULL, cluster = FALSE)
}
\arguments{
\item{betas}{DNA methylation dataframe with beta values. Rows are subjects, columns are probes. Columns must have probe names from the Illumina 450k array if using the RF-based detection method.}

\item{num_cores}{Number of cores to be used. Default is 1 (no parallel processing).}

\item{rf}{Logical (TRUE/FALSE) indicating whether to use the RF-based method. The default is FALSE (using the IQR-based method).}

\item{probes}{An optional list of character elements containing the names of the probes in 'betas' that should be analyzed. Default is to analyze all probes present in 'betas'.}

\item{cluster}{Logical (TRUE/FALSE) indicating whether to detect cluster probes into unmethylated, intermediate, and methylated probes based on their methylation status in 'betas' (later will incorporate a reference for blood) and group SEMs based on the type of probe they originate from. Clustering is required for RF-based models.}

\item{array}{A string indicating the type of Illumina array; required for the RF method. The allowed options are "450k" or "EPIC".}
}
\value{
A dataframe containing different types of SEM counts. Subjects are in organized in the same order as in \code{betas}.
}
\description{
Detect SEMs in DNA Methylation Beta Values
}
\details{
This function serves as the main entry point for detecting stochastic epigenetic mutations (SEMs)
in DNA methylation data using either an IQR-based method or a more sophisticated Random Forest (RF)-based method.
It also offers the capability to cluster probes based on their methylation status
and analyze SEMs accordingly. The function is designed to be flexible, allowing for parallel processing to speed up
computations on large datasets. User interaction is required for confirming proceeding after probe clustering when
running interactively. For automated scripts, consider wrapping calls to this function in a way that handles user prompts programmatically.
}
